# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" , "DEV"]
  pull_request:
    branches: [ "main" , "DEV"]
  workflow_dispatch:

jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: 'adopt'
        
    - name: Build with Gradle
      run: ./gradlew build --scan

    - name: Store reports
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: |
          **/build/reports/
          **/build/test-results/
  
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: build/libs
    
    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build


